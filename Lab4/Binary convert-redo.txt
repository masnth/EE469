1110 00 1 1101 0 0000 0000 0000 0000 0111
1110 00 1 1101 0 0000 0001 0000 0000 0101
1110 00 1 1101 0 0000 0010 0000 0000 0010
1110 00 1 1101 0 0000 0011 0000 0000 0100
1110 01 0 1100 1 0011 0100 0000 0000 0000
1110 00 0 0010 0 0000 0101 0000 0000 0001
1110 00 1 1010 1 0101 0000 0000 0000 0011
1100 10 1 0000 0 0000 0000 0000 0000 0010
1110 00 0 1101 0 0000 0010 0010 1000 0010
1110 00 1 1101 0 0000 0100 0000 0000 0111
1110 10 1 0000 0 0000 0000 0000 0000 0001
1110 00 1 1101 0 0000 0010 0000 0000 0110
1110 00 0 1101 0 0000 0011 0001 0000 0011




10111000000 000000000 00 00111 00000
10111000100 000000000 00 00000 00000
10111000000 000000100 00 00101 00001
10111000100 000000100 00 00001 00001
10111000000 000001000 00 00010 00010
10111000100 000001000 00 00010 00010
10111000000 000001100 00 00100 00011
10111000100 000001100 00 00011 00011
10111000000 000010000 00 00011 00100
10111000100 000010000 00 00011 00100 // ptr*
11001011000 00000 000000 00001 00101
1101000100 000000000011 00101 00110
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // compare (A-B) > 3
000101 00000000000000000000010000
10111000000 000010000 00 00110 00100
11010011011 00011 000010 00000 00011
11010011011 00010 000111 00000 00010
10111000000 000001100 00 00111 00100


10111000100000000000000000000000 // int A
10111000100000000001000000000001 // int B
10111000100 000000010 00 00000 00010 // int C
10111000100 000000011 00 00000 00011 // int D




	mem[0] <= 32'b10111000000000000000000011100000; //int A = 7
			mem[1] <= 32'b10111000100000000000000000000000; //load from mem to reg 
			mem[2] <= 32'b10111000000000000100000010100001; //int B = 5 
			mem[3] <= 32'b10111000100000000100000000100001; //load from mem to reg
			mem[4] <= 32'b10111000000000001000000001000010; //int C = 2 
			mem[5] <= 32'b10111000100000001000000001000010; //load from mem to reg
			mem[6] <= 32'b10111000000000001100000010000011; //int D = 4
			mem[7] <= 32'b10111000100000001100000001100011; //load from mem to reg
			mem[8] <= 32'b10111000000000010000000001100100; //int*dPtr = &D
			mem[9] <= 32'b10111000100000010000000001100100; //load from mem to reg
			mem[10] <= 32'b11001011000000000000000000100101; //sub A - B store to X
			mem[11] <= 32'b11010001000000000000110010100110; //X - 3
			mem[12] <= 32'b01010100000000000000000001100000; // B.GT
			//mem[12] <= 32'b00010100000000000000000000010000; //
			mem[13] <= 32'b10111000000000010000000011000100; //C = 6
			mem[14] <= 32'b11010011011000110000100000000011; //D = D<<2
			mem[15] <= 32'b11010011011000100001110000000010; //C = C<<5
			mem[16] <= 32'b10111000000000001100000011100100; //*dPtr = 7

